name: Postgres Service Containers
# Source from https://github.com/actions/example-services
on:
  push:
    branches:
      - 'master'
    paths:
      - 'resources/postgres/*'    
      - '.github/workflows/service-containers.yml'

jobs:
  ## Running all steps on containers
  container-job:
    runs-on: ubuntu-latest

    container:
      image:  node:10.16-jessie

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # port mapping
        - 5432:5432
        # health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1     
    - run: npm ci
      working-directory: ./resources/postgres
    - run: node client.js
      working-directory: ./resources/postgres
      env:
        # Access via service name (postgres) in running on conatiners
        # as it's executed in container network
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

  ## Running all steps on VM
  vm-job:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # Randumly open port will be assigned if port# is not given
        - 5432/tcp
        # health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1     
    - run: npm ci
      working-directory: ./resources/postgres
    - run: node client.js
      working-directory: ./resources/postgres
      env:
        # Access via 'localhost' in running on VM case as service container
        # use port binding of host
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} 
